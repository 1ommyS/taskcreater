<?phpnamespace App\Http\Controllers;use App\Enums\Roles;use App\Imports\UsersImport;use App\libs\VkBot;use App\Models\User;use App\Repositories\Implementations\GroupRepository;use App\Repositories\Implementations\UserRepository;use Exception;use Illuminate\Http\Request;use Illuminate\Support\Facades\Auth;use Illuminate\Support\Facades\Hash;use Illuminate\Support\Facades\Validator;use Maatwebsite\Excel\Excel;class UserController extends Controller{    public function auth (Request $request)    {        $rules = [/**/            'email' => 'required',            'password' => 'required',        ];        $messages = [            'email.required' => 'E-mail обязательное поле',            'password.required' => 'Пароль обязательное поле',        ];        Validator::make($request->all(), $rules, $messages)->validate();        $user = User::where('email', $request->email)->first();        try {            $is_password_correct = $user->password === hash('sha3-256', $request->password);            if ( $is_password_correct ) {                Auth::login($user, 1);                return redirect()->route('profile');            } else {                session()->flash('error', 'Неправильный e-mail/пароль');            }        } catch ( Exception $e ) {            session()->flash('error', 'Произошла ошибка');        }        finally {            return redirect()->back();        }    }    public function import ()    {        Excel::import(new UsersImport, 'users.xlsx');        return redirect('/')->with('success', 'All good!');    }    public function username ()    {        return 'login';    }    public function create (Request $request)    {        $rules = [            'login' => 'required|unique:users',            'password' => 'required|confirmed',            'name' => 'required',            'city' => 'required',            'phone_student' => 'required',            'birthday' => 'required',            'age' => 'required',            'link_vk' => 'required',        ];        $messages = [            'name.required' => 'Укажите своё имя',            'login.unique' => 'Такой пользователь уже есть',            'password.required' => 'Укажите свой пароль',            'password.confirmed' => 'Пароли не совпадают',            'login.required' => 'Укажите свой логин',            'city.required' => 'Укажите город своего проживания',            'phone_student.required' => 'Укажите свой телефон',            'birthday.required' => 'Укажите дату своего рождения',            'link_vk.required' => 'Укажите свой VK',            'age.required' => 'Укажите свой возраст',        ];        $validator = Validator::make($request->all(), $rules, $messages)->validate();        $user = User::create([            'name' => $request->name,            'login' => $request->login,            'city' => $request->city,            'age' => $request->age,            'phone_student' => $request->phone_student,            'phone_parent' => $request->phone_parent ?? "",            'birthday' => $request->birthday,            'link_vk' => $request->link_vk,            'name_parent' => $request->name_parent ?? "",            'password' => hash("sha3-256", $request->password),            'parent_vk' => $request->parent_vk ?? "",            'role_id' => Roles::STUDENT,            'sex' => $request->sex,        ]);        session()->flash('success', 'Вы успешно зарегистрированы');        Auth::login($user, true);        return redirect("/profile");    }    public function logout (Request $request)    {        Auth::logout();        return redirect()->route('auth.login');    }    private function updatePasswords ()    {        $users = User::all();        foreach ( $users as $user ) {            $user->password = Hash::make($user->password);            $user->save();        }    }    public function restorePassword ()    {        $data = json_decode(file_get_contents("php://input"));        $login = $data->login;        $user = User::where("name", $login)->first();        $email = $user->email;        $alphabet = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";        $password = "";        for ( $i = 1; $i <= 8; $i++ ) {            $password .= $alphabet[random_int(0, strlen($alphabet) - 1)];        }        $hash_password = hash("sha3-256", $password);        User::where("name", $login)->update([            "password" => $hash_password,        ]);        mail($email, subject: "Password", message: "Your password is: {$password}");    }}